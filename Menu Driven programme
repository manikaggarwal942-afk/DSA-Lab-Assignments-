#include <iostream>
using namespace std;

const int MAX_SIZE = 50;
int arr[MAX_SIZE];
int size = 0;

void create() {
    cout << "Enter the number of elements: ";
    cin >> size;
    if (size > MAX_SIZE) {
        cout << "Size exceeds maximum limit of " << MAX_SIZE << ".\n";
        size = MAX_SIZE;
    }
    cout << "Enter " << size << " elements:\n";
    for (int i = 0; i < size; i++) {
        cin >> arr[i];
    }
}

void display() {
    if (size == 0) {
        cout << "Array is empty.\n";
        return;
    }
    cout << "Array elements: ";
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
    cout << "\n";
}

void insert() {
    if (size == MAX_SIZE) {
        cout << "Array is full. Cannot insert new element.\n";
        return;
    }
    int pos, value;
    cout << "Enter position (0 to " << size << "): ";
    cin >> pos;
    if (pos < 0 || pos > size) {
        cout << "Invalid position.\n";
        return;
    }
    cout << "Enter value to insert: ";
    cin >> value;
    for (int i = size; i > pos; i--) {
        arr[i] = arr[i - 1];
    }
    arr[pos] = value;
    size++;
    cout << "Element inserted successfully.\n";
}

void deleteElement() {
    if (size == 0) {
        cout << "Array is empty. Nothing to delete.\n";
        return;
    }
    int pos;
    cout << "Enter position (0 to " << size - 1 << "): ";
    cin >> pos;
    if (pos < 0 || pos >= size) {
        cout << "Invalid position.\n";
        return;
    }
    for (int i = pos; i < size - 1; i++) {
        arr[i] = arr[i + 1];
    }
    size--;
    cout << "Element deleted successfully.\n";
}

void linearSearch() {
    if (size == 0) {
        cout << "Array is empty.\n";
        return;
    }
    int value;
    cout << "Enter value to search: ";
    cin >> value;
    for (int i = 0; i < size; i++) {
        if (arr[i] == value) {
            cout << "Element found at index " << i << ".\n";
            return;
        }
    }
    cout << "Element not found.\n";
}

int main() {
    int choice;
    while (true) {
        cout << "\n---- Menu ----\n";
        cout << "1. Create\n";
        cout << "2. Display\n";
        cout << "3. Insert\n";
        cout << "4. Delete\n";
        cout << "5. Linear Search\n";
        cout << "6. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;
        switch (choice) {
            case 1: create(); break;
            case 2: display(); break;
            case 3: insert(); break;
            case 4: deleteElement(); break;
            case 5: linearSearch(); break;
            case 6: return 0;
            default: cout << "Invalid choice. Please try again.\n";
        }
    }
}
